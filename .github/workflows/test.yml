name: Tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - develop

jobs:
  flutter_test:
    name: Flutter analyze, format and test
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: "3.7.7"
    steps:
      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache/hosted/pub.dartlang.org
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-flutter-

      # Set up Flutter.
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # Checkout code and get packages.
      - name: Checkout code
        uses: actions/checkout@v3
      - run: flutter pub get -v
        if: success()

      # Analyze, check formatting, and run unit tests.
      - run: flutter analyze
      - name: Ensure the Dart code is formatted correctly
        run: dart format --set-exit-if-changed .
      # - run: flutter test --coverage
      # - run: flutter test --machine > test-results.json
      # - uses: dorny/test-reporter@v1.4.2
      #   with:
      #     name: test-results
      #     path: test-results.json
      #     reporter: flutter-json
      # - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
      #   with:
      #     min_coverage: 80
  status_webhook:
    name: Send notification to webhook
    runs-on: ubuntu-latest
    env:
      NAME: "Beer Store"
    needs:
      - flutter_test
    if: ${{ always() }}
    steps:
      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v2
        env:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{"repository": "${{ env.NAME }}","execution-link": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}","jobs": [ ${{ toJSON(needs.flutter_test) }}, ${{ toJSON(needs.build) }} ]}'

