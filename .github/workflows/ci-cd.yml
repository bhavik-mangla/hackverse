name: CI-CD

on:
  workflow_dispatch:
  push:
    tags:
      - v*

jobs:
  flutter_test:
    name: Flutter analyze, format and test
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: "3.7.7"
      JOB_NAME: "Flutter analyze, format and test"
    steps:
      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache/hosted/pub.dartlang.org
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-flutter-

      # Set up Flutter.
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # Checkout code and get packages.
      - name: Checkout code
        uses: actions/checkout@v3
      - run: flutter pub get -v
        if: success()

      # Analyze, check formatting, and run unit tests.
      - run: flutter analyze
      - name: Ensure the Dart code is formatted correctly
        run: dart format --set-exit-if-changed .
    outputs:
      job_name: ${{ env.JOB_NAME }}
      # - run: flutter test --coverage
      # - run: flutter test --machine > test-results.json
      # - uses: dorny/test-reporter@v1.4.2
      #   with:
      #     name: test-results
      #     path: test-results.json
      #     reporter: flutter-json
      # - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
      #   with:
      #     min_coverage: 80
          
  build:
    needs: flutter_test
    runs-on: ubuntu-latest
    env:
      JOB_NAME: "Flutter build"
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract tag name
        shell: bash
        run: echo "VERSION_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Print build name
        run: echo "Build version ${{ env.VERSION_TAG }}"
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: "develogo/beerstore:${{ env.VERSION_TAG }}, develogo/beerstore:latest"
    outputs:
      job_name: ${{ env.JOB_NAME }}


  status_webhook:
    name: Send notification to webhook
    runs-on: ubuntu-latest
    env:
      NAME: "Beer Store"
    needs:
      - flutter_test
      - build
    if: ${{ always() }}
    steps:
      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v2
        env:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{"repository": "${{ env.NAME }}","execution-link": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}","jobs": [ ${{ toJSON(needs.flutter_test) }}, ${{ toJSON(needs.build) }} ]}'
